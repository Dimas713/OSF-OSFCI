#!/bin/bash
USERNAME=$1
GITHUBREPO=$2
BRANCH=$3
BOARDS=$4
STORAGE_URI=$5
STORAGE_TCPPORT=$6
INTERACTIVE=$7
GITTOKEN=$8
PROXY=$9
BINARIES_PATH=$(grep -A0 'BINARIES_PATH' "/usr/local/production/config/compiler1conf.yaml" | cut -d: -f2 | sed 's/[\" ]//g')
FIRMWARES_PATH=$(grep -A0 'FIRMWARES_PATH' "/usr/local/production/config/compiler1conf.yaml" | cut -d: -f2 | sed 's/[\" ]//g')
SUM=`md5sum <<EOF
$USERNAME
EOF`
SUM=`echo $SUM | awk '{ print $1 }'`
RECIPE=`echo $BOARDS | awk -F '/' '{print $2}'`
echo $RECIPE >& /tmp/out.txt
if [ ! -d /tmp/volume/linuxboot_$USERNAME ]
then
mkdir /tmp/volume/linuxboot_$USERNAME
else
rm -rf /tmp/volume/linuxboot_$USERNAME/*
fi
export KEYPATH=""
if [ -f $BINARIES_PATH/../keys/id_rsa.pub ]
then
        cp $BINARIES_PATH/../keys/id_rsa.pub /tmp/volume/linuxboot_$USERNAME/authorized_keys
        export KEYPATH=/volume/authorized_keys
fi
cp $FIRMWARES_PATH/default.rom /tmp/volume/linuxboot_$USERNAME/
docker run -d --network host --name linuxboot_$SUM -v /tmp/volume/linuxboot_$USERNAME:/volume -e KEYPATH=$KEYPATH -e GITHUBREPO=$GITHUBREPO -e BRANCH=$BRANCH -e BOARDS=$BOARDS -e PROXY=$PROXY -e GITTOKEN=$GITTOKEN --rm=true  linuxboot 
docker logs -f linuxboot_$SUM
docker wait linuxboot_$SUM
if [ -f /tmp/volume/linuxboot_$USERNAME/linuxboot.rom ]
then
\rm $FIRMWARES_PATH/test_$USERNAME.rom
cp /tmp/volume/linuxboot_$USERNAME/linuxboot.rom $FIRMWARES_PATH/test_${RECIPE}_${USERNAME}.rom
echo "Image successfully generated ..." 
echo "shadow test_${RECIPE}_${USERNAME}.rom" 
$BINARIES_PATH/shadow $FIRMWARES_PATH/test_${RECIPE}_${USERNAME}.rom
echo "DONE !" 
if [ "$http_proxy" != "" ]
then
unset http_proxy
fi
if [ "$https_proxy" != "" ]
then
unset https_proxy
fi
curl -H "Content-Type:application/octet-stream" -T $FIRMWARES_PATH/test_${RECIPE}_${USERNAME}.rom http://$STORAGE_URI$STORAGE_TCPPORT/user/$USERNAME/linuxboot/$RECIPE/test_$USERNAME.rom
fi
if [ "$INTERACTIVE" == 1 ]
then
	while true
	do
		sleep 60
	done
fi
