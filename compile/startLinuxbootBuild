#!/bin/bash
USERNAME=$1
GITHUBREPO=$2
BRANCH=$3
BOARDS=$4
PROXY=$5
if [ ! -d /tmp/volume/linuxboot_$USERNAME ]
then
mkdir /tmp/volume/linuxboot_$USERNAME
else
rm /tmp/volume/linuxboot_$USERNAME/*
fi
export KEYPATH=""
if [ -f $BINARIES_PATH/../keys/id_rsa.pub ]
then
        cp $BINARIES_PATH/../keys/id_rsa.pub /tmp/volume/linuxboot_$USERNAME/authorized_keys
        export KEYPATH=/volume/authorized_keys
fi
cp $FIRMWARES_PATH/default.rom /tmp/volume/linuxboot_$USERNAME/
docker run --name linuxboot_$USERNAME -v /tmp/volume/linuxboot_$USERNAME:/volume -e KEYPATH=$KEYPATH -e GITHUBREPO=$GITHUBREPO -e BRANCH=$BRANCH -e BOARDS=$BOARDS -e PROXY=$PROXY --rm=true  linuxboot 
if [ -f /tmp/volume/linuxboot_$USERNAME/linuxboot.rom ]
then
\rm $FIRMWARES_PATH/test_$USERNAME.rom
cp /tmp/volume/linuxboot_$USERNAME/linuxboot.rom $FIRMWARES_PATH/test_$USERNAME.rom
echo "Image successfully generated ..." 
echo "shadow test_$USERNAME.rom" 
$BINARIES_PATH/shadow $FIRMWARES_PATH/test_$USERNAME.rom
echo "DONE !" 
curl -H "Content-Type:application/octet-stream" -T $FIRMWARES_PATH/test_$USERNAME.rom http://$STORAGE_URI$STORAGE_TCPPORT/user/$USERNAME/linuxboot/test_$USERNAME.rom
fi
while true
do
sleep 60
done
